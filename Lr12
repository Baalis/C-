#include <iostream>
#include <cstdlib>
#include <ctime>

int main() {
    std::srand(std::time(0));
    
    const int size = 10;
    int vector[size];
    
    for (int *p = vector; p < vector + size; ++p) {
        *p = std::rand() % 100;	//* є вказівником і буде використовуватися для зберігання інформації про місцезнаходження даних типу int. 
    }
    
    std::cout << "Array: ";
    for (int *p = vector; p < vector + size; ++p) {
        std::cout << *p << " ";
    }
    std::cout << std::endl;
    
    int *minPtr = vector;
    
    for (int *p = vector + 1; p < vector + size; ++p) {
        if (*p < *minPtr) {
            minPtr = p;
        }
    }
    
    std::cout << "Smallest element: " << *minPtr << std::endl;
    return 0;
}
____________________________________________________________________

#include <iostream>
#include <iomanip>

int main() {
    const int rows = 10, cols = 10;
    int matrix[rows][cols] = {0};
    int *ptr = &matrix[0][0];//* є вказівником і буде використовуватися для зберігання інформації про місцезнаходження даних типу int. 
    //&Оператор просто знаходить адресу свого аргументу.
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            *(ptr + i * cols + j) = (i + 1) * (j + 1);
        }
    }
    
    std::cout << "Multiplication Table:\n";
    for (int *p = ptr; p < ptr + rows * cols; ++p) {
        std::cout << std::setw(4) << *p;
        if ((p - ptr + 1) % cols == 0) {
            std::cout << std::endl;
        }
    }
    
    return 0;
}
